<%-include('../../partials/header.ejs')%>
<%-include('../../partials/navbar.ejs')%>
<style>
    :root{
        --primary: #5EAAA8;
        --secondary: #A3D2CA;
        --beige: #F7F3E9;
        --orange: #F05945;
    }
    .button-container>*{
        padding: 10px;
    }
    .task-show-container .button-container button{
        height: 10vh;
        border: 2px black solid;
        transition: background-color 300ms ease-in;
    }
    .task-show-edit___show{
        padding: 0 10px;
    }
    .task-show-container .button-container button:hover{
        background-color: var(--primary);
    }
</style>
<body>
    <div class = "task_screen task-card-indivual task-show-container">
        <h3 class="card-label">Task:</h3>
    <h3><%=task.name%></h3>
        <h3 class="card-label">task information:</h3>
        <p><%=task.content%></p>
        <h3 class="card-label">due date:</h3>
        <p class='dueDateValue'><%const dueDate = new Date(task.dueDate.getTime()+(60 * 60 * 24 * 1000))%>
            <%=dueDate.toLocaleString().split(',')[0]%>
        </p>
        <h3 class="card-label">created date: </h3>
        <p><%=task.createdTime.toLocaleString().split(',')[0]%></p>
        <h3 class="card-label">time until due:</h3>
        <p class = "time-until-due-date">calculating...</p>
        <h3 class="card-label">board:</h3>
        <p><%=task.board.name%></p>
        <div class="button-container">
        <a href="/boards/<%=task.board.id%>"><button class ="task-show-button___index">back to board</button></a>
        <a href="/tasks/<%=task.id%>/edit"><button class ="task-show-button___index task-show-edit___show">Edit</button></a>
        <form action="/tasks/<%=task.id%>?_method=DELETE" method="POST">
            <button class ="task-show-button___index">Delete</button>
        </form>
    </div>
    </div>
<script>
    const taskTimer={
        dueDate:Date.parse($('.dueDateValue').text()),
        untilDueDate:Date.parse($('.dueDateValue').text())-new Date(),
        timer:null,
        reduceTime(){
            taskTimer.untilDueDate-=1000;
        },
        changeTimeDue(){
            $('.time-until-due-date').text(`days: ${Math.floor(taskTimer.untilDueDate/(1000*60*60*24))} hours: ${Math.floor(((taskTimer.untilDueDate/(1000))%(60*60*24))/(60*60))} minutes: ${Math.floor(((taskTimer.untilDueDate/(1000))%(60*60))/(60))}
            seconds: ${Math.floor(((taskTimer.untilDueDate/(1000))%(60)))}`)
        },
        timerHandler(){
            taskTimer.reduceTime();
            if(taskTimer.untilDueDate<=0){
                taskTimer.untilDueDate = 0;
                $('.time-until-due-date').text('PAST DUE')
                clearInterval(taskTimer.timer)

            }else{
                taskTimer.changeTimeDue()
            }
            ;
        },
        startTimer(){
            taskTimer.timer = setInterval(taskTimer.timerHandler,1000)
        }

    }
    taskTimer.startTimer();
</script>
    
</body>
</html>